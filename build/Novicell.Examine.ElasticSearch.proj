<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Package">

  <!-- IMPORTS -->
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
    <MSBuildUmbracoTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildUmbracoTasks</MSBuildUmbracoTasksPath>
    <MSBuildNugetTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildNugetTasks</MSBuildNugetTasksPath>
  </PropertyGroup>

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
  <Import Project="$(MSBuildUmbracoTasksPath)\MSBuild.Umbraco.Tasks.Targets" />
  <Import Project="$(MSBuildNugetTasksPath)\MSBuild.NuGet.Tasks.Targets" />

  <!-- SHARED PROPERTIES -->
  <PropertyGroup>
    <PackageName>Novicell.Examine.ElasticSearch.Umbraco</PackageName>
    <MinUmbracoVersion>8.4.0</MinUmbracoVersion>
    <Readme>Novicell.Examine.ElasticSearch is custom Examine provider.</Readme>
    <AuthorName>Arkadiusz Biel</AuthorName>
    <AuthorUrl>https://github.com/novicell/Novicell.Examine.ElasticSearch/graphs/contributors</AuthorUrl>
    <PackageLicenseName>MIT license</PackageLicenseName>
    <PackageLicenseUrl>http://www.opensource.org/licenses/mit-license.php</PackageLicenseUrl>
    <ProjectUrl>https://github.com/novicell/Novicell.Examine.ElasticSearch</ProjectUrl>
  </PropertyGroup>

  <!-- NUGET ONLY PROPERTIES -->
  <PropertyGroup>
    <PackageId>Novicell.Examine.ElasticSearch</PackageId>
    <Copyright>Novicell</Copyright>
    <Owners>Novicell,Arkadiusz Biel</Owners>
    <Description>Novicell.Examine.ElasticSearch is a Custom Search Provider for Examine</Description>
    <IconUrl>https://raw.githubusercontent.com/elastic/elasticsearch/master/server/src/main/resources/config/favicon.ico</IconUrl>
    <Tags>Umbraco, Novicell,Examine,ElasticSearch</Tags>
    <Language>en-GB</Language>
    <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
  </PropertyGroup>
  <PropertyGroup>
    <DescriptionUmbraco>Novicell.Examine.ElasticSearch.Umbraco is a composer to attach Elastich Search Examine provider to Umbravo v8</DescriptionUmbraco>
  </PropertyGroup>
  <!-- APPVEYOR PROPERTIES -->
  <PropertyGroup>
    <FileVersion>$(mssemver)</FileVersion>
  </PropertyGroup>

  <!-- PATHS -->
  <PropertyGroup>
    <BuildConfig>$(CONFIGURATION)</BuildConfig>
    <RootDir>$(MSBuildProjectDirectory)\..</RootDir>
    <BuildDir>$(MSBuildProjectDirectory)\_temp</BuildDir>
    <BuildUmbDir>$(BuildDir)\_umbraco</BuildUmbDir>
    <BuildNuGetDir>$(BuildDir)\_nuget</BuildNuGetDir>
    <BuildNuGetUmbracoDir>$(BuildDir)\umrbaco\_nuget</BuildNuGetUmbracoDir>
    <ArtifactsDir>$(RootDir)\artifacts</ArtifactsDir>
    <CoreProjectDir>$(RootDir)\source\Novicell.Examine.ElasticSearch</CoreProjectDir>
	<TestProjectDir>$(RootDir)\source\Novicell.Examine.ElasticSearch.Tests</TestProjectDir>
  </PropertyGroup>

  <!-- CLEAN -->
  <Target Name="Clean">
    <RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />
    <RemoveDir Directories="$(ArtifactsDir)" Condition="Exists('$(ArtifactsDir)')" />
    <MakeDir Directories="$(BuildDir)" />
    <MakeDir Directories="$(BuildUmbDir)" />
    <MakeDir Directories="$(BuildNuGetDir)" />
    <MakeDir Directories="$(BuildNuGetUmbracoDir)" />
    <MakeDir Directories="$(ArtifactsDir)" />
  </Target>

  <!-- COMPILE -->
  <Target Name="Compile" DependsOnTargets="Clean">
    <MSBuild Projects="$(CoreProjectDir)\Novicell.Examine.ElasticSearch.csproj" Properties="Configuration=$(BuildConfig)" />
    <MSBuild Projects="$(CoreProjectDir).Umbraco\Novicell.Examine.ElasticSearch.Umbraco.csproj" Properties="Configuration=$(BuildConfig)" />
	<MSBuild Projects="$(TestProjectDir)\Novicell.Examine.ElasticSearch.Tests.csproj" Properties="Configuration=$(BuildConfig)" />
  </Target>

  <!-- PREPARE FILES -->
  <Target Name="PrepareFiles" DependsOnTargets="Compile">
    <ItemGroup>
      <!-- Shared -->
      <BinFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Novicell.Examine.ElasticSearch.dll" />
      <PdbFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Novicell.Examine.ElasticSearch.pdb" />
      <BinFiles2 Include="$(CoreProjectDir).Umbraco\bin\$(BuildConfig)\Novicell.Examine.ElasticSearch.Umbraco.dll" />
      <PdbFiles2 Include="$(CoreProjectDir).Umbraco\bin\$(BuildConfig)\Novicell.Examine.ElasticSearch.Umbraco.pdb" />
      <!-- Umbraco specific -->
      <PackageFile Include="$(MSBuildProjectDirectory)\package.xml" />
      <UmbracoBinFiles Include="$(CoreProjectDir).Umbraco\bin\$(BuildConfig)\Novicell.Examine.ElasticSearch.Umbraco.dll" />
      <UmbracoBinFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Elasticsearch.Net.dll" />
	  <UmbracoBinFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Elasticsearch.Net.xml" />
	  <UmbracoBinFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Nest.dll" />
	  <UmbracoBinFiles Include="$(CoreProjectDir)\bin\$(BuildConfig)\Nest.xml" />
	  
      <!-- NuGet specific -->
      <SrcFiles Include="$(CoreProjectDir)\**\*.cs" Exclude="$(CoreProjectDir)\obj\**"/>
      <NuSpecFile Include="$(MSBuildProjectDirectory)\package.nuspec" />
      <NuSpecFile2 Include="$(MSBuildProjectDirectory)\Umbraco\package.nuspec" />
      <!--<NugetReadme Include="$(MSBuildProjectDirectory)\readme.txt" />-->
    </ItemGroup>

  <!-- Umbraco -->
  <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildUmbDir)\bin" />
  <Copy SourceFiles="@(UmbracoBinFiles)" DestinationFolder="$(BuildUmbDir)\bin" />
 
  <Copy SourceFiles="@(UmbracoOtherBinFiles)" DestinationFolder="$(BuildUmbDir)\bin" />
  <Copy SourceFiles="@(PackageFile)" DestinationFolder="$(BuildUmbDir)" />

    <!--NuGet -->
  <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
  <Copy SourceFiles="@(PdbFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
  <Copy SourceFiles="@(SrcFiles)" DestinationFiles="@(SrcFiles->'$(BuildNuGetDir)\src\%(RecursiveDir)%(Filename)%(Extension)')" />
  <Copy SourceFiles="@(NuSpecFile)" DestinationFolder="$(BuildNuGetDir)" />
  <Copy SourceFiles="@(NugetReadme)" DestinationFolder="$(BuildNuGetDir)" />
  <!-- Umbraco Nuget Package -->
    <Copy SourceFiles="@(BinFiles2)" DestinationFolder="$(BuildNuGetUmbracoDir)\lib\net45" />
    <Copy SourceFiles="@(PdbFiles2)" DestinationFolder="$(BuildNuGetUmbracoDir)\lib\net45" />
    <Copy SourceFiles="@(NuSpecFile2)" DestinationFolder="$(BuildNuGetUmbracoDir)" />
  </Target>

  <!-- MANIFEST UMBRACO -->
  <Target Name="ManifestUmbraco" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildUmbDir)\**\*" Exclude="$(BuildUmbDir)\package.xml" />
    </ItemGroup>
    <ManifestUpdate
      ManifestFile="$(BuildUmbDir)\package.xml"
      WorkingDirectory="$(BuildUmbDir)"
      MinimumRequiredUmbracoVersion="$(MinUmbracoVersion)"
      PackageName="$(PackageName)"
      PackageVersion="$(FileVersion)"
      AuthorName="$(AuthorName)"
      AuthorUrl="$(AuthorUrl)"
      Readme="$(Readme)"
      PackageLicenseName="$(PackageLicenseName)"
      PackageLicenseUrl="$(PackageLicenseUrl)"
      PackageUrl="$(ProjectUrl)"
      Files="@(ManifestFiles)"
      IconUrl="$(IconUrl)"/>
  </Target>

  <!-- MANIFEST FOR NUGET PACKAGE -->
  <Target Name="ManifestNuGet" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildNuGetDir)\**\*" Exclude="$(BuildNuGetDir)\package.nuspec" />
    </ItemGroup>
    <MSBuild.NuGet.Tasks.ManifestUpdate
      ManifestFile="$(BuildNuGetDir)\package.nuspec"
      WorkingDirectory="$(BuildNuGetDir)"
      Title="$(PackageName)"
      Description="$(Description)"
      Summary="$(Readme)"
      Version="$(FileVersion)"
      MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
      Authors="$(AuthorName)"
      Owners="$(Owners)"
      Copyright="$(Copyright)"
      LicenseUrl="$(PackageLicenseUrl)"
      ProjectUrl="$(ProjectUrl)"
      Id="$(PackageId)"
      IconUrl="$(IconUrl)"
      Language="$(Language)"
      RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
      Tags="$(Tags)"
      Files="@(ManifestFiles)" />
  </Target>
  <!-- MANIFEST FOR Umbraco NUGET PACKAGE -->
  <Target Name="ManifestNuGetUmbraco" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildNuGetUmbracoDir)\**\*" Exclude="$(BuildNuGetUmbracoDir)\package.nuspec" />
    </ItemGroup>
    <MSBuild.NuGet.Tasks.ManifestUpdate
            ManifestFile="$(BuildNuGetUmbracoDir)\package.nuspec"
            WorkingDirectory="$(BuildNuGetUmbracoDir)"
            Title="$(PackageName)"
            Description="$(DescriptionUmbraco)"
            Summary="$(Readme)"
            Version="$(FileVersion)"
            MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
            Authors="$(AuthorName)"
            Owners="$(Owners)"
            Copyright="$(Copyright)"
            LicenseUrl="$(PackageLicenseUrl)"
            ProjectUrl="$(ProjectUrl)"
            Id="$(PackageId).Umbraco"
            IconUrl="$(IconUrl)"
            Language="$(Language)"
            RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
            Tags="$(Tags)"
            Files="@(ManifestFiles)" />
  </Target>
  <!-- PACKAGE -->
  <Target Name="Package" DependsOnTargets="ManifestUmbraco; ManifestNuGet;ManifestNuGetUmbraco">
    <ItemGroup>
      <PackageFiles Include="$(BuildUmbDir)\**\*.*" />
    </ItemGroup>

    <Package ManifestFile="$(BuildUmbDir)\package.xml"
      WorkingDirectory="$(BuildUmbDir)"
      OutputDirectory="$(ArtifactsDir)"
      Files="@(PackageFiles)" />

    <MSBuild.NuGet.Tasks.Pack NuGetExePath="NuGet.exe"
      ManifestFile="$(BuildNuGetDir)\package.nuspec"
      BasePath="$(BuildNuGetDir)"
      Version="$(FileVersion)"
      OutputDirectory="$(ArtifactsDir)"
      Symbols="true" />
    <MSBuild.NuGet.Tasks.Pack NuGetExePath="NuGet.exe"
                              ManifestFile="$(BuildNuGetUmbracoDir)\package.nuspec"
                              BasePath="$(BuildNuGetUmbracoDir)"
                              Version="$(FileVersion)"
                              OutputDirectory="$(ArtifactsDir)"
                              Symbols="true" />
    <RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />

  </Target>

</Project>